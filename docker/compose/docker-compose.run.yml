services:
  minio:
    image: minio/minio:RELEASE.2025-05-24T17-08-30Z    
    container_name: minio
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=minio123
    ports:
      - "9000:9000"   # S3  API
      - "9001:9001"   # Web console
    volumes:
      - minio-data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      - lakehouse-net
      
  mc:
    image: minio/mc
    container_name: mc
    entrypoint: ["tail", "-f", "/dev/null"]   # Giữ container chạy để exec vào dùng lệnh mc
    depends_on:
      minio:
        condition: service_healthy  # Chờ MinIO sẵn sàng trước
    volumes:
      - ../../scripts:/scripts          
    networks:
      - lakehouse-net
    
  spark:
    image: lakehouse/spark:3.5.0
    container_name: spark
    depends_on:
      - minio
    networks:
      - lakehouse-net
    ports:
      - "4040:4040"
    volumes:
      - ../../spark_jobs:/opt/bitnami/spark/spark_jobs  
  
  metastore-db:
    container_name: metastore-db
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=root123
      - MYSQL_DATABASE=metastore
      - MYSQL_USER=hive
      - MYSQL_PASSWORD=hive123
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "hive", "-phive123"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - lakehouse-net

  hive-metastore:
    container_name: hive-metastore
    image: lakehouse/hive-metastore:4.0.0
    environment:
      - SERVICE_NAME=metastore
    depends_on:
      metastore-db:
        condition: service_healthy
    ports:
      - "9083:9083"
    networks:
      - lakehouse-net

volumes:
  minio-data:

networks:
  lakehouse-net:
    driver: bridge
